分布式系统:把原来用Java开发的一个大块系统, 给拆分成多个子系统, 多个子系统之间互相调用, 形成一个大系统的整体。

一个服务的代码不要太多, 1万行左右, 两三万撑死了。

dubbo分层:
    1)service层:服务提供的具体实现。
    2)config:配置层, dubbo的详细配置。
    3)proxy:服务代理层, 为consumer和provider生成代理, 代理之间进行通信。
    4)registry:注册中心层, 负责服务的注册与发现。
    5)cluster:路由层, 封装多个服务提供者的路由以及负载均衡。
    6)monitor:监控层, RPC 调用次数和调用时间监控。
    7)protocol:远程调用层, 封装rpc调用。
    8)exchange:信息交换层, 封装请求响应模式, 同步转异步。
    9)transport:网络传输层, 抽象mina和netty为统一接口。
    10)serialize:数据序列化层。

dubbo工作流程:
    1)provider向注册中心去注册。
    2)consumer从注册中心订阅服务, 注册中心会通知consumer注册好的服务。
    3)consumer调用provider。
    4)consumer和provider都异步通知监控中心。

dubbo注册中心挂了还可以继续通信, 因为开始初始化的时候, 消费者会将提供者的地址等信息拉取到本地缓存。

